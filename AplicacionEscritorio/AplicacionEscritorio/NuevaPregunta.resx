<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxPregunta.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>